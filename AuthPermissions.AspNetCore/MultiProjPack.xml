<?xml version="1.0" encoding="utf-8"?>
<allsettings xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!-- this contains the typical information you should have in your settings -->
  <!-- See documentation for all the possible values -->
  <metadata>
    <id>AuthPermissions.AspNetCore</id>
    <version>3.4.0</version>
    <authors>Jon P Smith</authors>
    <product>AuthPermissions.AspNetCore</product>
    <copyright>Copyright (c) 2021 Jon P Smith</copyright>
    <description>Provides extra authorization and multi-tenant features to a ASP.NET Core application.</description>
    <releaseNotes>
- New feature: Stop users linked to a tenant from accessing the the tenant while its being changed - see Example4 and Example6
- New feature: Take the application "down for maintenance", which diverts users to a "please wait" page - see Example4 and Example6
- New feature: Code for minimal API's fluent HasPermission - see pull request #51. (thanks to @idan-h)
- Improved feature: The name of the sharding file can have an EnvironmentName, e.g. "shardingsettings.Production.json"
- Improved feature: The RefreshUsersClaims classes have been moved to SupportCode project and a few classes have been renamed
- Improved feature: Sharding now has distributed lock on changes to the shardingsettings.json file
- Improved feature: Refresh users claims now uses Net.DistributedFileStoreCache - see Example4
- Improved feature: Added timeout on user invitation - see Example 3 and 5 (inspired by @idan-h)
- Improved feature: The AuthUserAdmin method QueryAuthUsers now takes an optional DatabaseInfoName to allow tenant admin users on sharding
- Bug Fix: The ReadShardingSettingsFile now return the default sharding DatabaseInformation if no sharding file is found
- Updated NuGets: There was a security alert on one of the NuGets. All the NuGets have been updated to the latest
	</releaseNotes>
    <license type="expression">MIT</license>
    <projectUrl>https://github.com/JonPSmith/AuthPermissions.AspNetCore</projectUrl>
    <icon>images\AuthPermissionsAspNetCoreNuGetIcon.png</icon>
    <tags>ASP.NET Core, Entity Framework Core</tags>
  </metadata>
  <toolSettings>
    <!-- This is used to find projects with names starting with this. If null then uses NuGet id -->
    <NamespacePrefix>AuthPermissions</NamespacePrefix>
    <!-- worth filling in with your local NuGet Package Source folder. See docs about using {USERPROFILE} in string -->
    <CopyNuGetTo>{USERPROFILE}\LocalNuGet</CopyNuGetTo>
  </toolSettings>
</allsettings>