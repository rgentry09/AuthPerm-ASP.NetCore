@model Example4.MvcWebApp.IndividualAccounts.Models.TenantDto

@{
    ViewData["Title"] = "Delete";
}

<div class="h3">Delete the <span class="h2">@Model.TenantName</span> tenant?</div>
<h3>Are you sure you want to delete this?</h3>

@if (Model.ListOfTenants.Any())
{
    <h4>You will also deleting the following tenants</h4>
    <ul>
        @foreach (var child in Model.ListOfTenants)
        {
        <li>@child.Value</li>
        }
    </ul>
}

<h4 class="text-danger">WARNING: This command is very powerful. Please consider what you are doing.</h4>

<p>
    The design of this delete is that the data linked to the tenant(s) aren't be deleted.
    You will see a page after the delete has finished which tells you what the data was linked to and the data's DataKey
</p>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TenantName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TenantName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TenantFullName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TenantFullName)
        </dd>
    </dl>

    <form asp-action="Delete">
        @Html.HiddenFor(model => model.TenantId)
        @Html.HiddenFor(model => model.TenantFullName)
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>
